/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsCreateImport } from './routes/products/create'
import { Route as ProductsIdImport } from './routes/products/$id'
import { Route as ProductsEditIdImport } from './routes/products/edit.$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsCreateRoute = ProductsCreateImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIdRoute = ProductsIdImport.update({
  id: '/products/$id',
  path: '/products/$id',
  getParentRoute: () => rootRoute,
} as any)

const ProductsEditIdRoute = ProductsEditIdImport.update({
  id: '/products/edit/$id',
  path: '/products/edit/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/products/$id': {
      id: '/products/$id'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdImport
      parentRoute: typeof rootRoute
    }
    '/products/create': {
      id: '/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof ProductsCreateImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/edit/$id': {
      id: '/products/edit/$id'
      path: '/products/edit/$id'
      fullPath: '/products/edit/$id'
      preLoaderRoute: typeof ProductsEditIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/products/$id': typeof ProductsIdRoute
  '/products/create': typeof ProductsCreateRoute
  '/products': typeof ProductsIndexRoute
  '/products/edit/$id': typeof ProductsEditIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/products/$id': typeof ProductsIdRoute
  '/products/create': typeof ProductsCreateRoute
  '/products': typeof ProductsIndexRoute
  '/products/edit/$id': typeof ProductsEditIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/products/$id': typeof ProductsIdRoute
  '/products/create': typeof ProductsCreateRoute
  '/products/': typeof ProductsIndexRoute
  '/products/edit/$id': typeof ProductsEditIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/products/$id'
    | '/products/create'
    | '/products'
    | '/products/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/products/$id'
    | '/products/create'
    | '/products'
    | '/products/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/products/$id'
    | '/products/create'
    | '/products/'
    | '/products/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProductsIdRoute: typeof ProductsIdRoute
  ProductsCreateRoute: typeof ProductsCreateRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  ProductsEditIdRoute: typeof ProductsEditIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProductsIdRoute: ProductsIdRoute,
  ProductsCreateRoute: ProductsCreateRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  ProductsEditIdRoute: ProductsEditIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/products/$id",
        "/products/create",
        "/products/",
        "/products/edit/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/products/$id": {
      "filePath": "products/$id.tsx"
    },
    "/products/create": {
      "filePath": "products/create.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/products/edit/$id": {
      "filePath": "products/edit.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
